---
import BaseLayout from "../layouts/BaseLayout.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import CTA from "../components/CTA.astro";
import { getGalleryImages } from "../data/cms";

export const prerender = false;

const galleryImages = await getGalleryImages();

const filters = [
  { key: 'all', label: 'Alle Momente' },
  { key: 'repair', label: 'Reparatur' },
  { key: 'workshop', label: 'Workshops' },
  { key: 'community', label: 'Community' }
];

const layoutClass = (layout: 'standard' | 'wide' | 'tall' | undefined) => {
  switch (layout) {
    case 'wide':
      return 'sm:col-span-2';
    case 'tall':
      return 'sm:row-span-2';
    default:
      return '';
  }
};
---

<BaseLayout title="Impressionen – Repair Café Leonberg" description="Bilder, Momente und Eindrücke aus dem Repair Café Leonberg.">
  <Header />

  <main class="bg-slate-100 py-12 md:py-16">
    <section class="pb-12">
      <div class="container">
        <div class="mx-auto max-w-4xl text-center">
          <span class="inline-flex items-center gap-2 rounded-full bg-white px-4 py-1 text-xs font-semibold uppercase tracking-[0.2em] text-slate-500">
            Impressionen
          </span>
          <h1 class="mt-5 font-display text-4xl font-extrabold text-slate-900 md:text-5xl">
            Momente aus dem Repair Café
          </h1>
          <p class="mt-3 text-base text-slate-600">
            Hinter den Kulissen von Reparaturtischen, Workshops und Community-Momenten – eine Galerie zum Durchstöbern.
          </p>
        </div>
      </div>
    </section>

    <section class="pb-12">
      <div class="container">
        <div class="flex flex-wrap justify-center gap-3" id="gallery-filters">
          {filters.map((filter, index) => (
            <button
              type="button"
              class={`filter-chip inline-flex items-center gap-2 rounded-full px-4 py-2 text-xs font-semibold uppercase tracking-[0.18em] transition ${index === 0 ? 'bg-brand-600 text-white shadow-brand-900/20' : 'bg-white text-slate-500 shadow-sm hover:bg-slate-200/80'}`}
              data-filter={filter.key}
              aria-pressed={index === 0}
            >
              {filter.label}
            </button>
          ))}
        </div>

        <div id="gallery-grid" class="mt-12 grid auto-rows-[14rem] gap-5 sm:grid-cols-2 lg:grid-cols-4">
          {galleryImages.map((item) => (
            <article
              class={`gallery-item group relative overflow-hidden rounded-3xl bg-white shadow-lg shadow-slate-900/5 transition hover:-translate-y-1 hover:shadow-2xl ${layoutClass(item.layout)}`}
              data-category={item.category}
            >
              <div class="relative h-full w-full">
                <img src={item.src} alt={item.alt} loading="lazy" class="h-full w-full object-cover transition duration-500 group-hover:scale-105" />
                <div class="pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-black/20 to-black/60 opacity-0 transition duration-300 group-hover:opacity-100"></div>
                <div class="pointer-events-none absolute inset-x-0 bottom-0 flex flex-col gap-1 px-5 pb-5 text-white opacity-0 transition duration-300 group-hover:opacity-100">
                  {item.title && (
                    <h3 class="font-display text-lg font-semibold">{item.title}</h3>
                  )}
                  {item.description && (
                    <p class="text-xs uppercase tracking-[0.22em] text-white/80">{item.description}</p>
                  )}
                </div>
              </div>
            </article>
          ))}
        </div>
      </div>
    </section>
  </main>

  <CTA />
  <Footer />

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const filterButtons = Array.from(document.querySelectorAll('[data-filter]')) as HTMLButtonElement[];
      const items = Array.from(document.querySelectorAll<HTMLElement>('.gallery-item'));

      function applyFilter(filter: string) {
        items.forEach((item) => {
          const matches = filter === 'all' || item.dataset.category === filter;
          item.classList.toggle('hidden', !matches);
        });
      }

      filterButtons.forEach((button) => {
        button.addEventListener('click', () => {
          const filter = button.dataset.filter ?? 'all';

          filterButtons.forEach((btn) => {
            const isActive = btn === button;
            btn.setAttribute('aria-pressed', String(isActive));
            btn.classList.toggle('bg-brand-600', isActive);
            btn.classList.toggle('text-white', isActive);
            btn.classList.toggle('shadow-brand-900/20', isActive);
            btn.classList.toggle('bg-white', !isActive);
            btn.classList.toggle('text-slate-500', !isActive);
          });

          applyFilter(filter);
        });
      });
    });
  </script>
</BaseLayout>
